// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"

}

datasource db {
  // provider = "mysql"
  // url      = env("DATABASE_URL")

  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")



   relationMode = "prisma"
}

model User {
  id         Int          @id @default(autoincrement())
  createdAt  DateTime     @default(now())
  name       String
  email      String       @unique
  password   String
  role       String       @default("user")
  // polls      Poll[]
  projects   Project[]
  appearence Appearence[]
  education  Education[]
  social     Social[]
  about      About[]
  slider     Slider[]
}

model Project {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @default("")
  desc      String @db.VarChar(255)    @default("")

  themeColor String  @default("#1976D2")
  enable     Boolean @default(true)
  user       User    @relation(fields: [userId], references: [id])
  userId     Int
}


model Slider {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  themeColor String   @default("#1976D2")
 
  title      String   
  link       String

  user   User @relation(fields: [userId], references: [id])
  userId Int
}


model About {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  themeColor String   @default("#1976D2")
  title      String   @default("")
  desc       String  @db.VarChar(555)   @default("")
  myImage    String   @default("")
  headImage  String   @default("")
  bgImage  String   @default("")
  link       String   @default("")
  work       String   @default("")
  phone      String   @default("")
  location     String   @default("")
  video        String   @default("")
  temp        Int   @default(2)

  pdf String @default("")

  whatsapp  String @default("")
  telgram   String @default("")
  facebook  String @default("")
  instagram String @default("")
  twitter   String @default("")
  iconColor String @default("#1976D2")
  textColor String   @default("#000000")

  user   User @relation(fields: [userId], references: [id])
  userId Int
}





model Appearence {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  themeColor   String   @default("#1976D2")
  imageoverlay String   @default("")
  user         User     @relation(fields: [userId], references: [id])
  userId       Int
}

model Education {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  themeColor String   @default("#1976D2")
  title      String
  year       Int
  desc       String
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
}

model Social {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  themeColor String   @default("#1976D2")
  iconColor  String   @default("#1976D2")

  link   String
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}




// model Poll {
//   id            Int      @id @default(autoincrement())
//   createdAt     DateTime @default(now())
//   updatedAt     DateTime @updatedAt
//   question      String
//   thanksMessage String   @default("Thank You!")
//   showResults   Boolean  @default(true)
//   themeColor    String   @default("#1976D2")
//   enable        Boolean  @default(true)
//   user          User     @relation(fields: [userId], references: [id])
//   userId        Int
//   answers       Answer[]
// }

// model Answer {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   name      String
//   votes     Vote[]
//   poll      Poll     @relation(fields: [pollId], references: [id], onDelete: Cascade)
//   pollId    Int
// }

// model Vote {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   device    Device
//   answer    Answer   @relation(fields: [answerId], references: [id], onDelete: Cascade)
//   answerId  Int
// }

// enum Device {
//   Mobile
//   Desktop
//   Tablet
// }
